#import "./commonFragments.gql"

query invoices($first: Int = 1000, $filters: InvoiceFilters, $orders: [[String]], $customerId: ID) {
  invoices(first: $first, filters: $filters, customerId: $customerId, orders: $orders) {
    pageInfo {
      ...PageInfoFragment
    }
    edges {
      node {
        ...InvoiceFragment
      }
    }
  }
}

query invoice($id: String) {
  node(id: $id) {
    ... on Invoice {
      ...InvoiceFragment
    }
  }
}

query countInvoices($filters: InvoiceFilters = {}) {
  countInvoices(filters: $filters)
}

mutation createInvoice($data: InvoiceInput!) {
  createInvoice(data: $data) {
    result {
      ...InvoiceFragment
    }
    successful
    messages {
      code
      field
      message
    }
  }
}

mutation updateInvoice($data: InvoiceInput, $id: ID!) {
  updateInvoice(data: $data, id: $id) {
    result {
      ...InvoiceFragment
    }
    successful
    messages {
      code
      field
      message
    }
  }
}

# Notify Invoice
mutation invoiceNotify(
	$bcc: [EmailShort]
	$cc: [EmailShort]
	$invoiceId: ID!
	$to: [EmailShort]
	$opts: String
) {
  invoiceNotify(
		bcc: $bcc
		cc: $cc
		invoiceId: $invoiceId
		to: $to
		opts: $opts
	) {
    successful
  }
}

fragment InvoiceFragment on Invoice {
  buyer {
    ...BuyerFragment
  }
	attachments {
		id
		url
		fileName
	}
	pdf {
		id
		url
		fileName
	}
  customNumber
  description
  dueDate
  expectedPaymentDate
  footer
  id
  issueDate
  items {
    ...ItemFragment
  }
  number {
    value
  }
  seller {
    ...SellerFragment
  }
  title
  total
  buyerTraderId
  sellerTraderId
  status
  type
}

fragment BuyerFragment on Buyer {
  billingAddress {
    ...AddressFragment
  }
  contact {
    ...ContactFragment
  }
  copyBillingAddress
  customer
  notes
  notificationEmails {
    ...EmailFragment
  }
  shippingAddress {
    ...AddressFragment
  }
}

fragment SellerFragment on Seller {
  address {
    ...AddressFragment
  }
  contact {
    ...ContactFragment
  }
  logoUrl
  notificationEmails {
    ...EmailFragment
  }
  vendor
}

fragment ItemFragment on Item {
  description
  discount {
    ...DiscountFragment
  }
  name
  order
  price
  quantity
  tax {
    ...TaxFragment
  }
}

fragment TaxFragment on Tax {
  description
  isCompound
  isRecoverable
  name
  order
  rate
}
