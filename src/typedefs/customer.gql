#import "./commonFragments.gql"

query customers(
  $where: CustomerWhereInput
  $orderBy: CustomerOrderByInput
  $skip: Int
  $after: String
  $before: String
  $first: Int
  $last: Int
) {
  customers(
    where: $where
    orderBy: $orderBy
    skip: $skip
    after: $after
    before: $before
    first: $first
    last: $last
  ) {
    pageInfo {
      ...PageInfoFragment
    }
    edges {
      node {
        ...CustomerFragment
      }
    }
    aggregate {
      count
    }
  }
}

query customer($where: WhereUniqueInput) {
  customer(where: $where) {
    ...CustomerFragment
  }
}

# Create Customer
mutation createCustomer($data: kCustomerCreateInput!) {
  createCustomer(data: $data) {
    ...CustomerFragment
  }
}

# Update Customer
mutation updateCustomer(
  $where: WhereUniqueInput!
  $data: kCustomerUpdateInput!
) {
  updateCustomer(where: $where, data: $data) {
    ...CustomerFragment
  }
}

# Delete Customer
mutation deleteCustomer($where: WhereUniqueInput!) {
  deleteCustomer(where: $where) {
    ...CustomerFragment
  }
}
