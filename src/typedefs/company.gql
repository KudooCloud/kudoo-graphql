#import "./commonFragments.gql"

query companies($joined: Boolean, $created: Boolean) {
  companies(joined: $joined, created: $created) {
    ...CompanyFragment
  }
}

query company($where: WhereUniqueInput) {
  company(where: $where) {
    ...CompanyFragment
  }
}

# Create Company
mutation createCompany($data: kCompanyCreateInput!) {
  createCompany(data: $data) {
    ...CompanyFragment
  }
}

# update Company
mutation updateCompany($data: kCompanyUpdateInput!, $where: WhereUniqueInput!) {
  updateCompany(data: $data, where: $where) {
    ...CompanyFragment
  }
}

# Invite
mutation invite($email: String!, $role: CompanyMemberRole!) {
  invite(email: $email, role: $role) {
    success
  }
}

# resendInvite
mutation resendInvite($email: String!, $role: CompanyMemberRole!, $companyMemberId: ID!) {
  resendInvite(email: $email, role: $role, companyMemberId: $companyMemberId) {
    success
  }
}

# Delete Company
mutation deleteCompany($id: ID!) {
  deleteCompany(id: $id) {
    ...CompanyFragment
  }
}

# Undelete Company
mutation undeleteCompany($id: ID!) {
  undeleteCompany(id: $id) {
    ...CompanyFragment
  }
}
