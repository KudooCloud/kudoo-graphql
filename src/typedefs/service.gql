#import "./commonFragments.gql"

query services(
  $where: ServiceWhereInput
  $orderBy: ServiceOrderByInput
  $skip: Int
  $after: String
  $before: String
  $first: Int
  $last: Int
) {
  services(
    where: $where
    orderBy: $orderBy
    skip: $skip
    after: $after
    before: $before
    first: $first
    last: $last
  ) {
    pageInfo {
      ...PageInfoFragment
    }
    edges {
      node {
        ...ServiceFragment
      }
      cursor
    }
    aggregate {
      count
    }
  }
}

query service($where: WhereUniqueInput!) {
  service(where: $where) {
    ...ServiceFragment
  }
}

# Create Service
mutation createService($data: kServiceCreateInput!) {
  createService(data: $data) {
    ...ServiceFragment
  }
}

# Update Service
mutation updateService($data: kServiceUpdateInput!, $where: WhereUniqueInput!) {
  updateService(data: $data, where: $where) {
    ...ServiceFragment
  }
}

# Delete Service
mutation deleteService($where: WhereUniqueInput!) {
  deleteService(where: $where) {
    ...ServiceFragment
  }
}
