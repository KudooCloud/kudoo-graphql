#import "./commonFragments.gql"

query invoices(
  $where: InvoiceWhereInput
  $orderBy: InvoiceOrderByInput
  $skip: Int
  $after: String
  $before: String
  $first: Int
  $last: Int
) {
  invoices(
    where: $where
    orderBy: $orderBy
    skip: $skip
    after: $after
    before: $before
    first: $first
    last: $last
  ) {
    pageInfo {
      ...PageInfoFragment
    }
    edges {
      node {
        ...InvoiceFragment
      }
    }
    aggregate {
      count
    }
  }
}

query invoice($where: WhereUniqueInput!) {
  invoice(where: $where) {
    ...InvoiceFragment
  }
}

query countInvoices($filters: InvoiceFilters = {}) {
  countInvoices(filters: $filters)
}

mutation createInvoice($data: kInvoiceCreateInput!) {
  createInvoice(data: $data) {
    ...InvoiceFragment
  }
}

mutation updateInvoiceStatus($status: InvoiceStatus!, $id: ID!) {
  updateInvoiceStatus(status: $status, id: $id) {
    ...InvoiceFragment
  }
}

# Notify Invoice
mutation invoiceNotify($data: InvoiceNotifyInput) {
  invoiceNotify(data: $data) {
    success
  }
}
