#import "./commonFragments.gql"

query ledgerJournals(
  $where: LedgerJournalWhereInput
  $orderBy: LedgerJournalOrderByInput
  $skip: Int
  $after: String
  $before: String
  $first: Int
  $last: Int
) {
  ledgerJournals(
    where: $where
    orderBy: $orderBy
    skip: $skip
    after: $after
    before: $before
    first: $first
    last: $last
  ) {
    pageInfo {
      ...PageInfoFragment
    }
    edges {
      node {
        ...LedgerJournalFragment
      }
    }
    aggregate {
      count
    }
  }
}

query ledgerJournal($where: WhereUniqueInput) {
  ledgerJournal(where: $where) {
    ...LedgerJournalFragment
  }
}

# Create LedgerJournal
mutation createLedgerJournal($data: kLedgerJournalCreateInput!) {
  createLedgerJournal(data: $data) {
    ...LedgerJournalFragment
  }
}

# Update LedgerJournal
mutation updateLedgerJournal(
  $where: WhereUniqueInput!
  $data: kLedgerJournalUpdateInput!
) {
  updateLedgerJournal(where: $where, data: $data) {
    ...LedgerJournalFragment
  }
}

# Delete LedgerJournal
mutation deleteLedgerJournal($where: WhereUniqueInput!) {
  deleteLedgerJournal(where: $where) {
    ...LedgerJournalFragment
  }
}
