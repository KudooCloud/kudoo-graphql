#import "./commonFragments.gql"

query timeSheets($filters: TimeSheetFilters = {}, $orders: [[String]]) {
  timeSheets(first: 1000, filters: $filters, orders: $orders) {
    pageInfo {
      ...PageInfoFragment
    }
    edges {
      node {
        ...TimesheetFragment
      }
    }
  }
}

query timesheet($id: String) {
  node(id: $id) {
    ... on TimeSheet {
      ...TimesheetFragment
    }
  }
}

# Create TimeSheet
mutation createTimeSheet(
  $companyId: ID
  $endsAt: NaiveDateTime
  $startsAt: NaiveDateTime
	$status: TimeSheetStatus
  $userId: ID
) {
  createTimeSheet(
    companyId: $companyId
    endsAt: $endsAt
    startsAt: $startsAt
		status: $status
    userId: $userId
  ) {
    successful
    messages {
      field
      message
    }
    result {
      ...TimesheetFragment
    }
  }
}

# Update TimeSheet
mutation updateTimeSheet(
  $companyId: ID
  $endsAt: NaiveDateTime
  $startsAt: NaiveDateTime
  $userId: ID
  $id: ID!
  $isArchived: Boolean
	$status: TimeSheetStatus
	$attachments: [EnhancedUpload]
	$preview: EnhancedUpload
) {
  updateTimeSheet(
    companyId: $companyId
    endsAt: $endsAt
    startsAt: $startsAt
    userId: $userId
    id: $id
    isArchived: $isArchived
		status: $status
		attachments: $attachments
		preview: $preview
  ) {
    successful
    messages {
      field
      message
    }
    result {
      ...TimesheetFragment
    }
  }
}

# Notify TimeSheet
mutation timeSheetNotify($timeSheetId: ID, $to: [EmailShort], $cc: [EmailShort], $bcc: [EmailShort]) {
  timeSheetNotify(timeSheetId: $timeSheetId, to: $to, cc: $cc, bcc: $bcc) {
    successful
  }
}

# Approve TimeSheet
mutation timeSheetApprove($timeSheetId: ID!, $to: [EmailShort]) {
  timeSheetApprove(timeSheetId: $timeSheetId, to: $to) {
    successful
  }
}

# Delete TimeSheet
mutation deleteTimeSheet($id: ID) {
  deleteTimeSheet(id: $id) {
    successful
    messages {
      field
      message
    }
    result {
      ...TimesheetFragment
    }
  }
}

fragment TimesheetFragment on TimeSheet {
  id
  companyId
  endsAt
  startsAt
  userId
	number
  isArchived
	status
	preview {
		id
		label
		url
	}
  attachments {
    id
    fileName
    url
    label
  }
}
