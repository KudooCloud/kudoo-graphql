#import "./commonFragments.gql"

query inventories(
  $where: InventoryWhereInput
  $orderBy: InventoryOrderByInput
  $skip: Int
  $after: String
  $before: String
  $first: Int
  $last: Int
) {
  inventories(
    where: $where
    orderBy: $orderBy
    skip: $skip
    after: $after
    before: $before
    first: $first
    last: $last
  ) {
    pageInfo {
      ...PageInfoFragment
    }
    edges {
      node {
        ...InventoryFragment
      }
    }
    aggregate {
      count
    }
  }
}

query inventory($where: WhereUniqueInput!) {
  inventory(where: $where) {
    ...InventoryFragment
  }
}

# Create Inventory
mutation createInventory($data: kInventoryCreateInput!) {
  createInventory(data: $data) {
    ...InventoryFragment
  }
}

# Update Inventory
mutation updateInventory(
  $where: WhereUniqueInput!
  $data: kInventoryUpdateInput!
) {
  updateInventory(where: $where, data: $data) {
    ...InventoryFragment
  }
}

# Delete Inventory
mutation deleteInventory($where: WhereUniqueInput!) {
  deleteInventory(where: $where) {
    ...InventoryFragment
  }
}
